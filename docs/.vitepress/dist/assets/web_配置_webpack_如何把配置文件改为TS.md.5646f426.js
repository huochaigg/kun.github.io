import{_ as s,c as e,o as a,Q as n}from"./chunks/framework.ef145a76.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"web/配置/webpack/如何把配置文件改为TS.md","filePath":"web/配置/webpack/如何把配置文件改为TS.md"}'),o={name:"web/配置/webpack/如何把配置文件改为TS.md"},p=n(`<h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">yarn add typescript ts-node @types/node</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">yarn add typescript ts-node @types/node</span></span></code></pre></div><h2 id="配置tsconfig-json" tabindex="-1">配置tsconfig.json <a class="header-anchor" href="#配置tsconfig-json" aria-label="Permalink to &quot;配置tsconfig.json&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">&quot;compilerOptions&quot;: {</span></span>
<span class="line"><span style="color:#e1e4e8;">    &quot;target&quot;: &quot;ES2020&quot;,</span></span>
<span class="line"><span style="color:#e1e4e8;">    &quot;module&quot;: &quot;CommonJS&quot;, // Webpack 使用 Node.js 环境</span></span>
<span class="line"><span style="color:#e1e4e8;">    // ......</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&quot;compilerOptions&quot;: {</span></span>
<span class="line"><span style="color:#24292e;">    &quot;target&quot;: &quot;ES2020&quot;,</span></span>
<span class="line"><span style="color:#24292e;">    &quot;module&quot;: &quot;CommonJS&quot;, // Webpack 使用 Node.js 环境</span></span>
<span class="line"><span style="color:#24292e;">    // ......</span></span></code></pre></div><h2 id="webpack-config-ts" tabindex="-1">webpack.config.ts <a class="header-anchor" href="#webpack-config-ts" aria-label="Permalink to &quot;webpack.config.ts&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">const config: Configuration = {</span></span>
<span class="line"><span style="color:#e1e4e8;">  // 其他配置...</span></span>
<span class="line"><span style="color:#e1e4e8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">const config: Configuration = {</span></span>
<span class="line"><span style="color:#24292e;">  // 其他配置...</span></span>
<span class="line"><span style="color:#24292e;">};</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">{</span></span>
<span class="line"><span style="color:#e1e4e8;">  &quot;scripts&quot;: {</span></span>
<span class="line"><span style="color:#e1e4e8;">    &quot;build&quot;: &quot;webpack --config webpack.config.ts&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">  }</span></span>
<span class="line"><span style="color:#e1e4e8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">{</span></span>
<span class="line"><span style="color:#24292e;">  &quot;scripts&quot;: {</span></span>
<span class="line"><span style="color:#24292e;">    &quot;build&quot;: &quot;webpack --config webpack.config.ts&quot;</span></span>
<span class="line"><span style="color:#24292e;">  }</span></span>
<span class="line"><span style="color:#24292e;">}</span></span></code></pre></div><h3 id="webpack-默认不识别-ts-配置文件-你需要通过-ts-node-注册运行时" tabindex="-1">webpack 默认不识别 .ts 配置文件，你需要通过 ts-node 注册运行时 <a class="header-anchor" href="#webpack-默认不识别-ts-配置文件-你需要通过-ts-node-注册运行时" aria-label="Permalink to &quot;webpack 默认不识别 .ts 配置文件，你需要通过 ts-node 注册运行时&quot;">​</a></h3><p>方式一：</p><p><code>--require ts-node/register</code>：告诉 Node.js 在运行之前加载 <code>ts-node</code> 的运行时注册模块；</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">webpack --config webpack.config.ts --require ts-node/register</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">webpack --config webpack.config.ts --require ts-node/register</span></span></code></pre></div><p>方式二 使用 NODE_OPTIONS：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">{</span></span>
<span class="line"><span style="color:#e1e4e8;">  &quot;scripts&quot;: {</span></span>
<span class="line"><span style="color:#e1e4e8;">    &quot;build&quot;: &quot;NODE_OPTIONS=&#39;--require ts-node/register&#39; webpack --config webpack.config.ts&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">  }</span></span>
<span class="line"><span style="color:#e1e4e8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">{</span></span>
<span class="line"><span style="color:#24292e;">  &quot;scripts&quot;: {</span></span>
<span class="line"><span style="color:#24292e;">    &quot;build&quot;: &quot;NODE_OPTIONS=&#39;--require ts-node/register&#39; webpack --config webpack.config.ts&quot;</span></span>
<span class="line"><span style="color:#24292e;">  }</span></span>
<span class="line"><span style="color:#24292e;">}</span></span></code></pre></div><p>Windows 环境需用 <code>cross-env</code> 跨平台设置</p>`,14),t=[p];function l(c,i,r,d,u,g){return a(),e("div",null,t)}const q=s(o,[["render",l]]);export{b as __pageData,q as default};
