import{_ as s,c as n,o as a,d as e}from"./app.b8b79069.js";const y=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u7C7B\u578B\u65AD\u8A00\u7684\u5E38\u89C1\u7528\u6CD5","slug":"\u7C7B\u578B\u65AD\u8A00\u7684\u5E38\u89C1\u7528\u6CD5","link":"#\u7C7B\u578B\u65AD\u8A00\u7684\u5E38\u89C1\u7528\u6CD5","children":[{"level":3,"title":"\u7F29\u5C0F\u7C7B\u578B\u8303\u56F4\uFF08\u7C7B\u578B\u6536\u7A84\uFF09","slug":"\u7F29\u5C0F\u7C7B\u578B\u8303\u56F4-\u7C7B\u578B\u6536\u7A84","link":"#\u7F29\u5C0F\u7C7B\u578B\u8303\u56F4-\u7C7B\u578B\u6536\u7A84","children":[]},{"level":3,"title":"\u5C06 DOM \u7C7B\u578B\u65AD\u8A00\u4E3A\u5177\u4F53\u5143\u7D20\u7C7B\u578B","slug":"\u5C06-dom-\u7C7B\u578B\u65AD\u8A00\u4E3A\u5177\u4F53\u5143\u7D20\u7C7B\u578B","link":"#\u5C06-dom-\u7C7B\u578B\u65AD\u8A00\u4E3A\u5177\u4F53\u5143\u7D20\u7C7B\u578B","children":[]},{"level":3,"title":"\u548C unknown \u8054\u5408\u4F7F\u7528","slug":"\u548C-unknown-\u8054\u5408\u4F7F\u7528","link":"#\u548C-unknown-\u8054\u5408\u4F7F\u7528","children":[]}]},{"level":2,"title":"as const \u662F as \u7684\u7279\u6B8A\u5F62\u5F0F","slug":"as-const-\u662F-as-\u7684\u7279\u6B8A\u5F62\u5F0F","link":"#as-const-\u662F-as-\u7684\u7279\u6B8A\u5F62\u5F0F","children":[]},{"level":2,"title":"\u6CE8\u610F\uFF1A","slug":"\u6CE8\u610F","link":"#\u6CE8\u610F","children":[]},{"level":2,"title":"as\u91CD\u6620\u5C04\u952E\u540D","slug":"as\u91CD\u6620\u5C04\u952E\u540D","link":"#as\u91CD\u6620\u5C04\u952E\u540D","children":[{"level":3,"title":"\u5C06\u6240\u6709\u5B57\u6BB5\u53D8\u4E3A\u5927\u5199\u952E\u540D","slug":"\u5C06\u6240\u6709\u5B57\u6BB5\u53D8\u4E3A\u5927\u5199\u952E\u540D","link":"#\u5C06\u6240\u6709\u5B57\u6BB5\u53D8\u4E3A\u5927\u5199\u952E\u540D","children":[]}]},{"level":2,"title":"\u6269\u5C55","slug":"\u6269\u5C55","link":"#\u6269\u5C55","children":[]}],"relativePath":"web/typescript/as.md"}'),l={name:"web/typescript/as.md"},p=e(`<p>\u5728 TypeScript \u4E2D\uFF0C<code>as</code> \u662F <strong>\u7C7B\u578B\u65AD\u8A00\uFF08Type Assertion\uFF09</strong> \u7684\u5173\u952E\u5B57\uFF0C\u7528\u4E8E\u544A\u8BC9\u7F16\u8BD1\u5668\uFF0C\u4F60\u5F88\u786E\u5B9A\u8FD9\u4E2A\u503C\u662F\u67D0\u4E2A\u7C7B\u578B\uFF0C\u5B83\u4E0D\u4F1A\u505A\u4EFB\u4F55 <strong>\u7C7B\u578B\u8F6C\u6362</strong>\uFF0C\u53EA\u662F\u7528\u6765 <strong>\u8F85\u52A9\u7F16\u8BD1\u5668\u7406\u89E3\u7C7B\u578B</strong></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">let str = &quot;123&quot;;</span></span>
<span class="line"><span style="color:#A6ACCD;">let num = str as unknown as number;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>\u8FD9 <strong>\u4E0D\u662F\u628A\u5B57\u7B26\u4E32\u8F6C\u6362\u6210\u6570\u5B57</strong>\uFF0C\u53EA\u662F\u7F16\u8BD1\u5668\u8BA4\u4E3A <code>num</code> \u662F <code>number</code> \u7C7B\u578B\u3002\u4F46\u8FD0\u884C\u65F6\u5B83\u4ECD\u7136\u662F <code>&quot;123&quot;</code> \u5B57\u7B26\u4E32</p><h2 id="\u7C7B\u578B\u65AD\u8A00\u7684\u5E38\u89C1\u7528\u6CD5" tabindex="-1">\u7C7B\u578B\u65AD\u8A00\u7684\u5E38\u89C1\u7528\u6CD5 <a class="header-anchor" href="#\u7C7B\u578B\u65AD\u8A00\u7684\u5E38\u89C1\u7528\u6CD5" aria-hidden="true">#</a></h2><h3 id="\u7F29\u5C0F\u7C7B\u578B\u8303\u56F4-\u7C7B\u578B\u6536\u7A84" tabindex="-1">\u7F29\u5C0F\u7C7B\u578B\u8303\u56F4\uFF08\u7C7B\u578B\u6536\u7A84\uFF09 <a class="header-anchor" href="#\u7F29\u5C0F\u7C7B\u578B\u8303\u56F4-\u7C7B\u578B\u6536\u7A84" aria-hidden="true">#</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">function handle(value: string | number) {</span></span>
<span class="line"><span style="color:#A6ACCD;">  if ((value as string).toUpperCase) {</span></span>
<span class="line"><span style="color:#A6ACCD;">    console.log((value as string).toUpperCase());</span></span>
<span class="line"><span style="color:#A6ACCD;">  }</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="\u5C06-dom-\u7C7B\u578B\u65AD\u8A00\u4E3A\u5177\u4F53\u5143\u7D20\u7C7B\u578B" tabindex="-1">\u5C06 DOM \u7C7B\u578B\u65AD\u8A00\u4E3A\u5177\u4F53\u5143\u7D20\u7C7B\u578B <a class="header-anchor" href="#\u5C06-dom-\u7C7B\u578B\u65AD\u8A00\u4E3A\u5177\u4F53\u5143\u7D20\u7C7B\u578B" aria-hidden="true">#</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">const input = document.querySelector(&#39;input&#39;) as HTMLInputElement;</span></span>
<span class="line"><span style="color:#A6ACCD;">console.log(input.value);</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>\u4E0D\u52A0 <code>as</code>\uFF0C<code>querySelector</code> \u53EA\u80FD\u63A8\u65AD\u4E3A <code>Element | null</code>\uFF0C\u6CA1\u6709 <code>.value</code> \u5C5E\u6027</p><h3 id="\u548C-unknown-\u8054\u5408\u4F7F\u7528" tabindex="-1">\u548C <code>unknown</code> \u8054\u5408\u4F7F\u7528 <a class="header-anchor" href="#\u548C-unknown-\u8054\u5408\u4F7F\u7528" aria-hidden="true">#</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">function parseData(data: string): unknown {</span></span>
<span class="line"><span style="color:#A6ACCD;">  return JSON.parse(data);</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">const result = parseData(&#39;{&quot;name&quot;: &quot;Tom&quot;}&#39;) as { name: string };</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="as-const-\u662F-as-\u7684\u7279\u6B8A\u5F62\u5F0F" tabindex="-1"><code>as const</code> \u662F <code>as</code> \u7684\u7279\u6B8A\u5F62\u5F0F <a class="header-anchor" href="#as-const-\u662F-as-\u7684\u7279\u6B8A\u5F62\u5F0F" aria-hidden="true">#</a></h2><p><code>as const</code> \u662F\u65AD\u8A00\u4E3A\u6700\u7A84\u5B57\u9762\u91CF\u7C7B\u578B + readonly \u7684\u8BED\u6CD5\u7CD6</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">const arr = [1, 2, 3] as const;</span></span>
<span class="line"><span style="color:#A6ACCD;">// \u7C7B\u578B\u662F readonly [1, 2, 3]</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="\u6CE8\u610F" tabindex="-1">\u6CE8\u610F\uFF1A <a class="header-anchor" href="#\u6CE8\u610F" aria-hidden="true">#</a></h2><p>\u6EE5\u7528\u65AD\u8A00\u5F15\u8D77\u7684\u95EE\u9898\uFF1A</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">const el = document.querySelector(&#39;input&#39;) as HTMLDivElement; // \u9519\u8BEF\u4F46\u7F16\u8BD1\u5668\u4E0D\u62A5\u9519\uFF0C\u8FD9\u6837\u4E0D\u5B89\u5168</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>\u89E3\u51B3\u65B9\u6CD5\uFF1A</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">const el = document.querySelector(&#39;input&#39;);</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">if (el instanceof HTMLInputElement) {</span></span>
<span class="line"><span style="color:#A6ACCD;">  // \u73B0\u5728 el \u7684\u7C7B\u578B\u4F1A\u81EA\u52A8\u7F29\u5C0F\u4E3A HTMLInputElement</span></span>
<span class="line"><span style="color:#A6ACCD;">  console.log(el.value);</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">// \u6216\u5C01\u88C5\u6210\u7C7B\u578B\u65B9\u6CD5</span></span>
<span class="line"><span style="color:#A6ACCD;">function queryInput(selector: string): HTMLInputElement | null {</span></span>
<span class="line"><span style="color:#A6ACCD;">  const el = document.querySelector(selector);</span></span>
<span class="line"><span style="color:#A6ACCD;">  return el instanceof HTMLInputElement ? el : null;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">const input = queryInput(&#39;input&#39;);</span></span>
<span class="line"><span style="color:#A6ACCD;">if (input) {</span></span>
<span class="line"><span style="color:#A6ACCD;">  console.log(input.value);</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="as\u91CD\u6620\u5C04\u952E\u540D" tabindex="-1">as\u91CD\u6620\u5C04\u952E\u540D <a class="header-anchor" href="#as\u91CD\u6620\u5C04\u952E\u540D" aria-hidden="true">#</a></h2><p>\u8BED\u6CD5\uFF1A<code>as</code> + <code>keyof</code> + \u6A21\u677F\u5B57\u9762\u91CF\u7C7B\u578B</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">type RenameKeys&lt;T&gt; = {</span></span>
<span class="line"><span style="color:#A6ACCD;">  [K in keyof T as \`new_\${string &amp; K}\`]: T[K];</span></span>
<span class="line"><span style="color:#A6ACCD;">};</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>\u5220\u9664\u67D0\u4E9B\u952E\uFF0C\u6CE8\u610F\u8FD9\u91CCextends\u7684\u7528\u6CD5</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">type Original = {</span></span>
<span class="line"><span style="color:#A6ACCD;">  id: number;</span></span>
<span class="line"><span style="color:#A6ACCD;">  name: string;</span></span>
<span class="line"><span style="color:#A6ACCD;">  password: string;</span></span>
<span class="line"><span style="color:#A6ACCD;">};</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">// \u53EA\u4FDD\u7559\u975E password \u7684\u5B57\u6BB5</span></span>
<span class="line"><span style="color:#A6ACCD;">type WithoutPassword = {</span></span>
<span class="line"><span style="color:#A6ACCD;">  [K in keyof Original as K extends &quot;password&quot; ? never : K]: Original[K];</span></span>
<span class="line"><span style="color:#A6ACCD;">};</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">// \u5F97\u5230\uFF1A</span></span>
<span class="line"><span style="color:#A6ACCD;">/*</span></span>
<span class="line"><span style="color:#A6ACCD;">type WithoutPassword = {</span></span>
<span class="line"><span style="color:#A6ACCD;">  id: number;</span></span>
<span class="line"><span style="color:#A6ACCD;">  name: string;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">*/</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="\u5C06\u6240\u6709\u5B57\u6BB5\u53D8\u4E3A\u5927\u5199\u952E\u540D" tabindex="-1">\u5C06\u6240\u6709\u5B57\u6BB5\u53D8\u4E3A\u5927\u5199\u952E\u540D <a class="header-anchor" href="#\u5C06\u6240\u6709\u5B57\u6BB5\u53D8\u4E3A\u5927\u5199\u952E\u540D" aria-hidden="true">#</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">type Original = {</span></span>
<span class="line"><span style="color:#A6ACCD;">  foo: number;</span></span>
<span class="line"><span style="color:#A6ACCD;">  barBaz: string;</span></span>
<span class="line"><span style="color:#A6ACCD;">};</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">type UppercaseKeys = {</span></span>
<span class="line"><span style="color:#A6ACCD;">  [K in keyof Original as Uppercase&lt;string &amp; K&gt;]: Original[K];</span></span>
<span class="line"><span style="color:#A6ACCD;">};</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">// \u5F97\u5230\uFF1A</span></span>
<span class="line"><span style="color:#A6ACCD;">/*</span></span>
<span class="line"><span style="color:#A6ACCD;">type UppercaseKeys = {</span></span>
<span class="line"><span style="color:#A6ACCD;">  FOO: number;</span></span>
<span class="line"><span style="color:#A6ACCD;">  BARBAZ: string;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">*/</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="\u6269\u5C55" tabindex="-1">\u6269\u5C55 <a class="header-anchor" href="#\u6269\u5C55" aria-hidden="true">#</a></h2><p>as \u6539\u540D\u6280\u5DE7\u8868</p><table><thead><tr><th>\u64CD\u4F5C</th><th>\u793A\u4F8B\u8BED\u6CD5</th><th>\u793A\u4F8B\u7ED3\u679C (\u8F93\u5165: <code>{ name: string; age: number }</code>)</th></tr></thead><tbody><tr><td>\u52A0\u524D\u7F00</td><td><code>[K in keyof T as</code> prefix_\${string &amp; K}<code>]</code></td><td><code>{ prefix_name: string; prefix_age: number }</code></td></tr><tr><td>\u52A0\u540E\u7F00</td><td><code>[K in keyof T as</code> \${string &amp; K}_suffix<code>]</code></td><td><code>{ name_suffix: string; age_suffix: number }</code></td></tr><tr><td>\u5927\u5199\u5B57\u6BB5\u540D</td><td><code>[K in keyof T as Uppercase&lt;string &amp; K&gt;]</code></td><td><code>{ NAME: string; AGE: number }</code></td></tr><tr><td>\u5C0F\u5199\u5B57\u6BB5\u540D</td><td><code>[K in keyof T as Lowercase&lt;string &amp; K&gt;]</code></td><td><code>{ name: string; age: number }</code>\uFF08\u539F\u6837\uFF0C\u9664\u975E\u6709\u5927\u5199\uFF09</td></tr><tr><td>\u9A7C\u5CF0\u8F6C\u4E0B\u5212\u7EBF\u540D</td><td><code>[K in keyof T as K extends string ? SnakeCase&lt;K&gt; : never]</code> <em>(\u9700\u5DE5\u5177\u7C7B\u578B)</em></td><td><code>{ name: string; age: number }</code> \u2192 <code>{ name: string; age: number }</code></td></tr><tr><td>\u8FC7\u6EE4\u5B57\u6BB5</td><td><code>[K in keyof T as K extends &#39;age&#39; ? never : K]</code></td><td><code>{ name: string }</code></td></tr><tr><td>\u53EA\u4FDD\u7559\u5B57\u7B26\u4E32\u503C</td><td><code>[K in keyof T as T[K] extends string ? K : never]</code></td><td><code>{ name: string }</code>\uFF08\u5047\u8BBE <code>age</code> \u662F <code>number</code>\uFF09</td></tr><tr><td>\u6620\u5C04\u4E3A\u5E38\u91CF\u5B57\u6BB5</td><td><code>[K in keyof T as</code> \${K &amp; string}_CONST<code>]: &quot;CONST&quot;</code></td><td><code>{ name_CONST: &quot;CONST&quot;; age_CONST: &quot;CONST&quot; }</code></td></tr></tbody></table>`,29),o=[p];function t(c,r,i,d,C,A){return a(),n("div",null,o)}const g=s(l,[["render",t]]);export{y as __pageData,g as default};
