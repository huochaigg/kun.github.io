import{_ as a,c as e,o as s,Q as o}from"./chunks/framework.ef145a76.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"web/网络和浏览器/常见安全问题-点击劫持.md","filePath":"web/网络和浏览器/常见安全问题-点击劫持.md"}'),t={name:"web/网络和浏览器/常见安全问题-点击劫持.md"},i=o(`<p>Clickjacking（点击劫持）</p><h2 id="工作原理" tabindex="-1">工作原理 <a class="header-anchor" href="#工作原理" aria-label="Permalink to &quot;工作原理&quot;">​</a></h2><ol><li><p>攻击者构造一个恶意页面；</p></li><li><p>在页面中嵌入受害网站页面的 <code>iframe</code>；</p></li><li><p>通过 CSS 设置 iframe 为透明或隐藏，只露出目标按钮；</p></li><li><p>诱导用户点击伪装按钮；</p></li><li><p>实际触发了受害页面上的敏感操作（如转账、点赞、购买等）；</p></li></ol><h2 id="防御方法" tabindex="-1">防御方法： <a class="header-anchor" href="#防御方法" aria-label="Permalink to &quot;防御方法：&quot;">​</a></h2><h3 id="_1-禁止被嵌入-iframe" tabindex="-1">1. 禁止被嵌入 iframe <a class="header-anchor" href="#_1-禁止被嵌入-iframe" aria-label="Permalink to &quot;1. 禁止被嵌入 iframe&quot;">​</a></h3><h4 id="推荐使用-http-头" tabindex="-1">推荐使用 HTTP 头： <a class="header-anchor" href="#推荐使用-http-头" aria-label="Permalink to &quot;推荐使用 HTTP 头：&quot;">​</a></h4><ul><li><code>X-Frame-Options</code>（旧标准）</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">X-Frame-Options: DENY           # 拒绝所有嵌套</span></span>
<span class="line"><span style="color:#e1e4e8;">X-Frame-Options: SAMEORIGIN     # 允许同源嵌套</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">X-Frame-Options: DENY           # 拒绝所有嵌套</span></span>
<span class="line"><span style="color:#24292e;">X-Frame-Options: SAMEORIGIN     # 允许同源嵌套</span></span></code></pre></div><ul><li><code>Content-Security-Policy</code>（新标准）</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">Content-Security-Policy: frame-ancestors &#39;none&#39;;  # 更灵活控制</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">Content-Security-Policy: frame-ancestors &#39;none&#39;;  # 更灵活控制</span></span></code></pre></div><h3 id="_2-js-自检防御-不推荐-仅作为补充" tabindex="-1">2. JS 自检防御（不推荐，仅作为补充） <a class="header-anchor" href="#_2-js-自检防御-不推荐-仅作为补充" aria-label="Permalink to &quot;2. JS 自检防御（不推荐，仅作为补充）&quot;">​</a></h3><h3 id="_3-重要操作二次验证" tabindex="-1">3. 重要操作二次验证 <a class="header-anchor" href="#_3-重要操作二次验证" aria-label="Permalink to &quot;3. 重要操作二次验证&quot;">​</a></h3><p>如：支付、修改密码、删除等，要求再次输入密码或验证码，防止一次点击触发关键操作。</p><h3 id="_4-使用-samesite-cookie-属性" tabindex="-1">4. 使用 SameSite Cookie 属性 <a class="header-anchor" href="#_4-使用-samesite-cookie-属性" aria-label="Permalink to &quot;4. 使用 SameSite Cookie 属性&quot;">​</a></h3><h3 id="_5-视觉验证" tabindex="-1">5. 视觉验证 <a class="header-anchor" href="#_5-视觉验证" aria-label="Permalink to &quot;5. 视觉验证&quot;">​</a></h3><p>通过识别用户行为，例如点击按钮前必须拖动滑块或验证码，提升操作成本。</p>`,16),l=[i];function n(r,c,p,d,h,_){return s(),e("div",null,l)}const b=a(t,[["render",n]]);export{m as __pageData,b as default};
